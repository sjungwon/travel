--ITEM
drop table if exists item CASCADE;
drop table if exists address CASCADE;
drop table if exists category CASCADE;
drop table if exists upload_file CASCADE;
drop table if exists item_image CASCADE;

create table address(
    zonecode integer,
    address varchar(30),
    primary key (zonecode)
);

create table category(
    id bigint generated by default as identity,
    kr varchar(20),
    en varchar(20),
    primary key (id)
);

create table upload_file(
     store_file_name varchar(50),
     upload_file_name varchar(50),
     primary key (store_file_name)
);


create table item(
    id bigint generated by default as identity,
    title varchar(20),
    zonecode integer NOT NULL,
    address_detail varchar(50),
    description varchar(100),
    category_id bigint,
    thumbnail varchar(50),
    created_at varchar(50),
    updated_at varchar(50),
    deleted integer default (0) ,
    FOREIGN KEY(zonecode) REFERENCES ADDRESS(ZONECODE),
    FOREIGN KEY(category_id) REFERENCES CATEGORY(ID),
    CONSTRAINT DELETED_RANGE CHECK (deleted = 0 OR deleted = 1),
    primary key (id)
);

create table item_image(
    id bigint generated by default as identity,
    store_file_name varchar(50) NOT NULL,
    item_id bigint NOT NULL,
    FOREIGN KEY(store_file_name) REFERENCES upload_file(store_file_name) ON DELETE CASCADE,
    FOREIGN KEY(item_id) REFERENCES ITEM(id) ON DELETE CASCADE,
    primary key(id)
);

INSERT INTO CATEGORY (KR, EN) VALUES ('호텔', 'HOTEL');
INSERT INTO CATEGORY (KR, EN) VALUES ('나머지','ETC');
--INSERT INTO ADDRESS (zonecode, address) VALUES ('1234', '내집');
--INSERT INTO UPLOAD_FILE (store_file_name, upload_file_name) VALUES ('2af41f66-3663-4e02-a955-feef8bc.jpeg', '테스트이미지1.png');
--INSERT INTO UPLOAD_FILE (store_file_name, upload_file_name) VALUES ('cfee755a-91c0-48e1-8a9b-caebc7d.jpg', '테스트이미지2.png');
--INSERT INTO ITEM (title, zonecode, address_detail, description, category_id, thumbnail,created_at, updated_at) VALUES ('내집', '1234', '내집', '5성급', 2, '2af41f66-3663-4e02-a955-feef8bc.jpeg', '2022-12-26T21:10:30.152144','2022-12-26T21:10:30.152144');
--INSERT INTO ITEM_IMAGE (store_file_name, item_id) VALUES ('2af41f66-3663-4e02-a955-feef8bc.jpeg', 1);
--INSERT INTO ITEM_IMAGE (store_file_name, item_id) VALUES ('cfee755a-91c0-48e1-8a9b-caebc7d.jpg', 1);
--
--SELECT {I.id, I.title,  I.address_detail, I.thumbnail, I.description, I.created_at, I.updated_at, A.zonecode, A.address, C.id as category_id, C.kr as category_kr, C.en as category_en, ARRAY_AGG(M.store_file_name ORDER BY M.id)} FROM ITEM I JOIN ADDRESS A ON I.zonecode =  A.zonecode JOIN CATEGORY C ON I.category_id = C.id LEFT OUTER JOIN ITEM_IMAGE M ON I.id = M.item_id

--USER
DROP TABLE IF EXISTS ROLE CASCADE;
DROP TABLE IF EXISTS USERS CASCADE;
DROP TABLE IF EXISTS USERS_BAN_INFO CASCADE;

CREATE TABLE ROLE(
    id bigint generated by default as identity,
    type varchar(20) NOT NULL UNIQUE,
    primary key(id)
);

CREATE TABLE USERS(
    id bigint generated by default as identity,
    account varchar(30) NOT NULL UNIQUE,
    hashed_password varchar(80) NOT NULL,
    nickname varchar(30) NOT NULL UNIQUE,
    email varchar(50) NOT NULL UNIQUE,
    role_id bigint NOT NULL,
    created_at varchar(50) NOT NULL,
    updated_at varchar(50) NOT NULL,
    FOREIGN KEY(role_id) REFERENCES ROLE(id) ON DELETE CASCADE ON UPDATE CASCADE,
    primary key(id)
);

CREATE TABLE USERS_BAN_INFO(
    id bigint generated by default as identity,
    user_id bigint NOT NULL,
    description varchar(300) NOT NULL,
    created_at varchar(50) NOT NULL,
    FOREIGN KEY(user_id) REFERENCES USERS ON DELETE CASCADE ON UPDATE CASCADE,
    PRIMARY KEY(id)
);

INSERT INTO ROLE (type) VALUES ('ALL');
INSERT INTO ROLE (type) VALUES ('ADMIN');
INSERT INTO ROLE (type) VALUES ('MANAGER');
INSERT INTO ROLE (type) VALUES ('USER');
INSERT INTO ROLE (type) VALUES ('BANNED');

--INSERT INTO USERS (account, hashed_password, nickname, email, role_id, created_at, updated_at) VALUES ('test', 'qwer1234', 'test', 'test@test.com', 2, '2022', '2022');
